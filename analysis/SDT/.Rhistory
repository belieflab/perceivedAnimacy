}
}
# remove participants (to_exclude)
visits <- visits[visits$rep_person_id != to_exclude[1] &
visits$rep_person_id != to_exclude[2] &
visits$rep_person_id != to_exclude[3] &
visits$rep_person_id != to_exclude[4],]
# create ID vectors for visits and db (NOTE: they differ)
visitsID <- unique(visits$rep_person_id)[order(unique(visits$rep_person_id))]
dbID <- unique(db$record_id)[order(unique(db$record_id))]
# if true then both IDs are the same length and same ID's order
sum(dbID == visitsID) == nrow(db)
# # # # # # # # # # # # # # # add new variables # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## ## ## n of diagnosis ## ## ##
db$nDiag <- rowSums(db[,grepl("diagnoses_before_the_first",colnames(db))])
## ## ## n medication ## ## ##
db$nAdhdStim <- ifelse(rowSums(db[,paste0("adhd_medications___",1:4)])==0,0,1)
db$nAdhdNoSt <- ifelse(rowSums(db[,paste0("adhd_medications___",5:6)])==0,0,1)
## ## ## temporal variables ## ## ##
# age of first episode of psychosis
db$afep <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first mental health evaluation
db$afmh <- as.numeric(as.Date(db$dmhvisit, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization first
db$afh <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization second
db$afs <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# time of first mental health complain until first episode
db$timemhfe <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
# prodrome duration
db$prodDur <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
#duration of follow-up before first episopde
db$prodfollowup <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$daterep, format="%Y-%m-%d"))/365
# age at first contact
db$agefirstcontact <- as.numeric(as.Date(db$daterep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
#### #### #### create new joint case_definitions #### #### ####
db$case_definition2 <- ifelse(db$case_definition == 1 | db$case_definition == 3,
13, ifelse(db$case_definition == 2 | db$case_definition == 4,
24, 56))
# change factor order
db$case_definition2 <- factor(db$case_definition2,levels=c("24","13"))
levels(db$case_definition2) <- c("Schizophrenia","Bipolar")
# add db$daterep to visits (which should be the same as the firt dx_date)
visits$daterep <- NA
# create diagnosis column
visits$case_definition2 <- factor(NA,levels=c("Schizophrenia","Bipolar"))
for (i in 1:length(visitsID)) {
visits$daterep[visits$rep_person_id == visitsID[i]] <-
db$daterep[db$record_id == visitsID[i]]
visits$case_definition2[visits$rep_person_id == visitsID[i]] <-
db$case_definition2[db$record_id == visitsID[i]]
}
#### #### #### change categorical to factor #### #### ####
temp <- c(table_variables$item[table_variables$cont == 0],group_by,"case_definition2")
for (i in 1:length(temp)) {
db[,temp[i]] <- as.factor(db[,temp[i]])
}
# # # # # # # # # # # # # # # SOMETHING ELSE # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# require my functions
source("functions.R")
# # # # # # # # create dates sequence matrix # # # # # # # # # # # # # # # # # #
# all days since the oldest day
daysSeq <- seq(as.Date("1985-01-01"),as.Date("2021-12-31"), "days")
if (sum(list.files("Tables & Figures") == "datSeqMat.csv")==0) {
message("create all days matrix")
for (i in 1:max(table(visits$rep_person_id))) {
Sys.sleep(0.1); setTxtProgressBar(
txtProgressBar(min = 0, max = max(table(visits$rep_person_id)),style = 3),i)
if (i == 1) {
datSeqMat <- daysSeq
} else {
datSeqMat <- data.frame(datSeqMat,daysSeq)
}
}
datSeqMat <- t(datSeqMat)
rownames(datSeqMat) <- NULL
write.csv(datSeqMat,"Tables & Figures/datSeqMat.csv",col.names=F,row.names=F)
} else {
datSeqMat <- data.frame(read.csv("Tables & Figures/datSeqMat.csv"))
}
# # # # # # # # create data frame with cumulative visits # # # # # # # # # # # #
# get data for each day since 1985 and cumulative visits
message("create all days data base")
counter <- 0
not_enough_data <- as.vector(NA)
for (i in 1:length(dbID)) {
# # # # process bar # # # #
Sys.sleep(0.1);setTxtProgressBar(txtProgressBar(min = 0, max = length(dbID),style = 3),i)
# # # # # # # # # # # #
# get one ID from visits
temp <- visits[visits$rep_person_id == dbID[i],]
# add diagnosis to visits
# # # # # # # # # # # # # # # # # # #
# # # # ADD MORE VARIBLES HERE# # # #
# # # # # # # # # # # # # # # # # # #
temp$daterep <- db$daterep[db$record_id == dbID[i]]
temp$case_definition2 <- db$case_definition2[db$record_id == dbID[i]]
# add cumulative visits
temp$cumSum <- 1:nrow(temp)
temp$relCumSum <- temp$cumSum/nrow(temp)
if (nrow(temp) > 1) {
# when was the FEP
tempFep <- which(as.character(daysSeq) == max(temp$dx_date))
tempFirHosp <- which(as.character(daysSeq) == min(temp$dx_date))
daysToFep <- rep(NA,length(daysSeq))
daysToFep[tempFirHosp:tempFep] <- (tempFirHosp-tempFep):0
# map days with all possible days
temp2 <- as.character(temp$dx_date) == (datSeqMat[1:nrow(temp),tempFirHosp:tempFep])
if (i == 1) {
allDays <- data.frame(temp[1,c("rep_person_id","date_of_fep","dob","clinic",
"case_definition","case_definition2")],
date=daysSeq[tempFirHosp:tempFep],
daysToFep=daysToFep[tempFirHosp:tempFep],
relDaysToFep=-daysToFep[tempFirHosp:tempFep]/min(daysToFep[tempFirHosp:tempFep]),
cumSum=cumsum(colSums(temp2)),
relCumSum=cumsum(colSums(temp2))/max(cumsum(colSums(temp2))),
medianBefore=-(daysToFep[tempFirHosp:tempFep]/min(daysToFep[tempFirHosp:tempFep]))[
min(which((cumsum(colSums(temp2))/max(cumsum(colSums(temp2)))-0.5)==
min(abs(cumsum(colSums(temp2))/max(cumsum(colSums(temp2)))-0.5))))])
visits2 <- temp
} else {
allDays <- rbind(allDays,data.frame(temp[1,c("rep_person_id","date_of_fep","dob","clinic",
"case_definition","case_definition2")],
date=daysSeq[tempFirHosp:tempFep],
daysToFep=daysToFep[tempFirHosp:tempFep],
relDaysToFep=-daysToFep[tempFirHosp:tempFep]/min(daysToFep[tempFirHosp:tempFep]),
cumSum=cumsum(colSums(temp2)),
relCumSum=cumsum(colSums(temp2))/max(cumsum(colSums(temp2))),
medianBefore=-(daysToFep[tempFirHosp:tempFep]/min(daysToFep[tempFirHosp:tempFep]))[
min(which((cumsum(colSums(temp2))/max(cumsum(colSums(temp2)))-0.5)==
min(abs(cumsum(colSums(temp2))/max(cumsum(colSums(temp2)))-0.5))))]))
visits2 <- rbind(visits2,temp)
} # if i == 1
} else {
counter <- counter + 1
not_enough_data[counter] <- dbID[i]
}
}
# participants with not enough data
not_enough_data
# super outlier
allDays[allDays$cumSum==max(allDays$cumSum),]
fig1A <- ggplot(allDays, aes(x=date,y=cumSum,col=case_definition2)) +
labs(y = "Cumulative Visits", x = "Date") +
geom_line(aes(group=rep_person_id), alpha=0.1) +
geom_smooth(se = F) +
scale_colour_manual(name = "Diagnosis", values = c("blue","orange")) +
theme_classic()
fig1A <- ggplot(allDays, aes(x=daysToFep,y=cumSum,col=case_definition2)) +
labs(y = "Cumulative Visits", x = "Days Previous to FEP") +
geom_line(aes(group=rep_person_id), alpha=0.1) +
geom_smooth(se = F) +
scale_colour_manual(name = "Diagnosis", values = c("blue","orange")) +
theme_classic()
fig1A
rm(list = ls()) # erase previous Global Environment, import manually the file
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set workplace
# do you want to print csv?
print_csv <- 0
print_fig <- 0
# # # # # # # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
if (!require(dplyr)) {install.packages("dplyr")}; library(dplyr)
if (!require(plyr)) {install.packages("plyr")}; library(plyr)
if (!require(ggplot2)) {install.packages("ggplot2")}; library(ggplot2)
if (!require(viridis)) {install.packages("viridis")}; library(viridis)
if (!require(ggpubr)) {install.packages("ggpubr")}; library(ggpubr)
if (!require(report)) {install.packages("report")}; library(report)
if (!require(survival)) {install.packages("survival")}; library(survival)
# if (!require(survMisc)) {install.packages("survMisc")}; library(survMisc)
if (!require(ggfortify)) {install.packages("ggfortify")}; library(ggfortify)
# if (!require(survminer)) {install.packages("survminer")}; library(survminer)
# # # # # # # # # # # # # # # read csv # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# data base
db <- read.csv("db_parte2_v4.csv")
# remove dob < 1985
db <- db[as.integer(substr(db$dob,1,4)) >= 1985,]
# feed the code table
table_variables <- read.csv("feedTheCode2.csv")
colnames(table_variables)[1] <- "nTable"
group_by <- table_variables$group_by[table_variables$group_by != ""]
do_stats <- table_variables$do_stats[1]
table_variables$group_by <- table_variables$do_stats <- NULL
# # # # # # # # # # # # # # # add new variables # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
## ## ## n of diagnosis ## ## ##
db$nDiag <- rowSums(db[,grepl("diagnoses_before_the_first",colnames(db))])
## ## ## n medication ## ## ##
db$nAdhdStim <- ifelse(rowSums(db[,paste0("adhd_medications___",1:4)])==0,0,1)
db$nAdhdNoSt <- ifelse(rowSums(db[,paste0("adhd_medications___",5:6)])==0,0,1)
## ## ## temporal variables ## ## ##
# age of first episode of psychosis
db$afep <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first mental health evaluation
db$afmh <- as.numeric(as.Date(db$dmhvisit, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization first
db$afh <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization second
db$afs <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# time of first mental health complain until first episode
db$timemhfe <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
# prodrome duration
db$prodDur <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
#duration of follow-up before first episopde
db$prodfollowup <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$daterep, format="%Y-%m-%d"))/365
# age at first contact
db$agefirstcontact <- as.numeric(as.Date(db$daterep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
#### #### #### create new joint case_definitions #### #### ####
db$case_definition2 <- ifelse(db$case_definition == 1 | db$case_definition == 3,
13, ifelse(db$case_definition == 2 | db$case_definition == 4,
24, 56))
#### #### #### change categorical to factor #### #### ####
temp <- c(table_variables$item[table_variables$cont == 0],group_by,"case_definition2")
for (i in 1:length(temp)) {
db[,temp[i]] <- as.factor(db[,temp[i]])
}
# # # # # # # # # # # # # # # create final tables # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # "case_definition" # # # # # # # # # # # # # # # # # # # # # # # # ####
descTabA <- f_buildTable(db = db, table_variables, group_by, do_stats, per_type = "f")
# # # # # 1 and 3 vs 2 and 4 "case_definition2" # # # # # # # # # # # # # # ####
f_13vs24 <- f_buildTable(db = db, table_variables, "case_definition2", do_stats, per_type = "f")
p_13vs24 <- f_buildTable(db = db, table_variables, "case_definition2", do_stats, per_type = "p.c")
descTabB <- data.frame(f_13vs24[,c("Table_name","Char.","Sub. Char.","item",
"Var. Type","Lvl. Names","Total")],
perTotal = p_13vs24$Total,
`13` = f_13vs24$`13`,per13 = p_13vs24$`13`,
`24` = f_13vs24$`24`,per24 = p_13vs24$`24`,
f_13vs24[,c("Statistic","Parameter","p value","p value ind.")])
# add categorical p value
descTabB$p.value.ind.2 <- ifelse(descTabB$p.value.ind. > 0.05,"NS",
ifelse(descTabB$p.value.ind. < 0.05 &
descTabB$p.value.ind. > 0.01, "<0.05",
ifelse(descTabB$p.value.ind. < 0.001, "<0.001","<0.01")))
# # # # # 1 vs 2 # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ####
db_1vs2 <- db[db$case_definition == "1" | db$case_definition == "2",]
db_1vs2$case_definition <- factor(db_1vs2$case_definition, levels = c("1","2"))
f_1vs2 <- f_buildTable(db = db_1vs2, table_variables, "case_definition", do_stats, per_type = "f")
p_1vs2 <- f_buildTable(db = db_1vs2, table_variables, "case_definition", do_stats, per_type = "p.c")
descTabC <- data.frame(f_1vs2[,c("Table_name","Char.","Sub. Char.","item",
"Var. Type","Lvl. Names","Total")],
perTotal = p_13vs24$Total,
`1` = f_1vs2$`1`,per1 = p_1vs2$`1`,
`2` = f_1vs2$`2`,per2 = p_1vs2$`2`,
f_1vs2[,c("Statistic","Parameter","p value","p value ind.")])
# add categorical p value
descTabC$p.value.ind.2 <- ifelse(descTabC$p.value.ind. > 0.05,"NS",
ifelse(descTabC$p.value.ind. < 0.05 &
descTabC$p.value.ind. > 0.01, "<0.05",
ifelse(descTabC$p.value.ind. < 0.001, "<0.001","<0.01")))
# combine A and B
descTab <- cbind(descTabA[,1:(ncol(descTabA)-3)],descTabB[,(ncol(descTabB)-4):(ncol(descTabB)-3)])
# # # # # Developmental and Non-Developmental # # # # # # # # # # # # # # # ####
db_dev <- db[db$type_of_problem == 1 & !is.na(db$type_of_problem) & db$dmhvisit != "",]
f_dev <- f_buildTable(db = db_dev, table_variables[table_variables$item == "prodromeduration",],
"case_definition2", do_stats, per_type = "f")
db_nod <- db[db$type_of_problem == 2 & !is.na(db$type_of_problem) & db$dmhvisit != "",]
f_nod <- f_buildTable(db = db_nod, table_variables[table_variables$item == "prodromeduration",],
"case_definition2", do_stats, per_type = "f")
devVsNoDev <- rbind(f_dev,f_nod)
# # # # # group is race 2 (w vs nw); data is filtered by race2 # # # # # # ####
db$race2 <- as.factor(ifelse(db$race == 1,"white","non-white"))
db_13 <- db[db$case_definition2 == "13",]
f_race2_13 <- f_buildTable(db = db_13, table_variables, "race2", do_stats, per_type = "f")
db_24 <- db[db$case_definition2 == "24",]
f_race2_24 <- f_buildTable(db = db_24, table_variables, "race2", do_stats, per_type = "f")
# # # # # SZ vs BP in dev. and in non-dev. # # # # # # # # # # # # # # # # ####
# developmental sz vs bp
f_mean_diff(db$prodDur[db$type_of_problem == 1 & db$case_definition2 == 13],
db$prodDur[db$type_of_problem == 1 & db$case_definition2 == 24],0)
# non-developmental sz vs bp
f_mean_diff(db$prodDur[db$type_of_problem == 2 & db$case_definition2 == 13],
db$prodDur[db$type_of_problem == 2 & db$case_definition2 == 24],0)
if (print_csv == 1) {
write.csv(descTab,"Tables & Figures/finalTable2_v2.csv", na = "",row.names = F)
write.csv(descTabA,"Tables & Figures/finalTable2.A_v2.csv", na = "",row.names = F)
write.csv(descTabB,"Tables & Figures/finalTable2.B_v2.csv", na = "",row.names = F)
write.csv(descTabC,"Tables & Figures/finalTable2.C_v2.csv", na = "",row.names = F)
write.csv(f_race2_13,"Tables & Figures/race2_13_v1.csv", na = "",row.names = F)
write.csv(f_race2_24,"Tables & Figures/race2_24_v1.csv", na = "",row.names = F)
}
# # # # # # # # # # # # # # # Figure 2# # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
diagPool.labs <- c("Bipolar", "Schizophrenia")
names(diagPool.labs) <- c("13", "24")
means <- data.frame(case_definition2 = c("13", "24"),
mean_x = c(round(mean(db$afep[db$case_definition2=="13"]),2),
round(mean(db$afep[db$case_definition2=="24"]),2)),
y_pos = c(20,20))
fig2 <- ggplot(db, aes(x=afep, col=sex, fill=sex)) +
labs(title = "Age at First Episode of Psychosis",
x = "Age (years)",
y = "Frequency (number of patients)") +
geom_vline(data=means, aes(xintercept = mean_x)) +
geom_text(data=means, aes(x=mean_x+8,y=y_pos, label=paste("M =",mean_x)),
inherit.aes = FALSE) +
geom_histogram(position="identity", bins = 12, alpha=0.1) +
scale_fill_manual(name="Sex",values=c("blue","red"),breaks=c("1","2"),labels=c("Male","Female")) +
scale_colour_manual(name="Sex",values=c("blue","red"),breaks=c("1","2"),labels=c("Male","Female")) +
facet_grid(. ~ case_definition2, labeller = labeller(case_definition2 = diagPool.labs)) +
theme_classic()
fig2
if (print_fig == 1) {
ggsave("Tables & Figures/fig2.png",
plot = fig2, width = 16, height = 12, dpi = 300, units = "cm",limitsize = T)
}
# # # # # # # # # # # # # # # Kaplan-Meier# # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# change factor order
db$case_definition2 <- factor(db$case_definition2,levels=c("24","13"))
levels(db$case_definition2) <- c("Schizophrenia","Bipolar")
db$type_of_problem <- factor(db$type_of_problem,levels=c("1","2"))
levels(db$type_of_problem) <- c("Developmental","Non-Developmental")
# # # # # # # # # # # # # # # Figure 3# # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # Developmental vs Non-Developmental # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
fit_fig3A <- survfit(Surv(prodDur) ~ case_definition2, data=db)
m3A <- summary(coxph(Surv(prodDur) ~ case_definition2, data=db)); m3A
names(fit_fig3A$strata) <- c("Schizophrenia","Bipolar")
# z <- c(rep("Schizophrenia",fit_fig3A$strata[1]),rep("Bipolar",fit_fig3A$strata[2]))
fig3A <- autoplot(fit_fig3A) +
labs(subtitle = "Overall") +
scale_colour_manual(name = "Diagnosis", values = c("blue","orange")) +
scale_fill_manual(name = "Diagnosis", values = c("blue","orange")) +
scale_y_reverse(labels = seq(100,0,by=-25)) +
scale_x_continuous(breaks = seq(0,30,by=5),limits = c(0,25)) +
annotate("text",x=20,y=0.6,label='bold("NS")',parse = TRUE,size=3) +
theme_classic() + theme(axis.title = element_blank(),
plot.title = element_text(size=9),
legend.title = element_text(size=9),
axis.text = element_text(size=7))
# fig3A
fit_fig3B <- survfit(Surv(prodDur) ~ case_definition2,
data=db[db$type_of_problem == "Developmental",])
m3B <- summary(coxph(Surv(prodDur) ~ case_definition2,
data=db[db$type_of_problem == "Developmental",])); m3B
names(fit_fig3B$strata) <- c("Schizophrenia","Bipolar")
fig3B <- autoplot(fit_fig3B, survLineSize = 2) +
labs(subtitle = "Developmental") +
scale_colour_manual(name = "Dignosis", values = c("blue","orange")) +
scale_fill_manual(name = "Dignosis", values = c("blue","orange")) +
scale_y_reverse(breaks = seq(0,1,by=.5),labels = seq(100,0,by=-50)) +
scale_x_continuous(breaks = seq(0,30,by=10),limits = c(0,25)) +
annotate("text",x=20,y=0.6,label='bold("NS")',parse = TRUE,size=3) +
theme_classic() + theme(axis.title = element_blank(),
plot.subtitle = element_text(size=9),
legend.title = element_text(size=9),
axis.text = element_text(size=7))
# fig3B
fit_fig3C <- survfit(Surv(prodDur) ~ case_definition2,
data=db[db$type_of_problem == "Non-Developmental",])
m3C <- summary(coxph(Surv(prodDur) ~ case_definition2,
data=db[db$type_of_problem == "Non-Developmental",])); m3C
fig3C <- autoplot(fit_fig3C) + labs(subtitle = "Non-Developmental") +
scale_colour_manual(name = "Dignosis", values = c("blue","orange")) +
scale_fill_manual(name = "Dignosis", values = c("blue","orange")) +
scale_y_reverse(breaks = seq(0,1,by=.5),labels = seq(100,0,by=-50)) +
scale_x_continuous(breaks = seq(0,30,by=10),limits = c(0,25)) +
annotate("text",x=20,y=0.6,label='bold("NS")',parse = TRUE,size=3) +
theme_classic() + theme(axis.title = element_blank(),
plot.subtitle = element_text(size=9),
legend.title = element_text(size=9),
axis.text = element_text(size=7))
# fig3C
# combine Figure 1 subplots
fig3 <- annotate_figure(
ggarrange(fig3A,
ggarrange(fig3B,fig3C,nrow=2,legend="none"),
ncol=2,common.legend = T,widths = c(2,1)),
top = text_grob("Kaplan-Maier Comparisons", face = "bold", size = 12),
bottom = text_grob("Time (years)", face = "bold",size = 10),
left = text_grob("Percent of Converted", face = "bold",rot = 90,size = 10))
fig3
if (print_fig == 1) {
ggsave("Tables & Figures/fig3.png",
plot = fig3, width = 12, height = 8, dpi = 1200, units = "cm",limitsize = T)
}
# # # # # # # # # # # # # # # Figure S1# # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # Depressive Prodrome # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# 03/05/2022
head(db)
View(db)
fig3
fit_figS2 <- survfit(Surv(prodDur) ~ type_of_problem,data=db)
fit_figS2 <- survfit(Surv(prodDur) ~ type_of_problem,data=db)
mS2 <- summary(coxph(Surv(prodDur) ~ type_of_problem,data=db)); mS1
mS2
# # # # # # # # # # # # # # # read csv # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# data base
db <- read.csv("db_parte2_v4.csv")
# remove dob < 1985
db <- db[as.integer(substr(db$dob,1,4)) >= 1985,]
# feed the code table
table_variables <- read.csv("feedTheCode2.csv")
colnames(table_variables)[1] <- "nTable"
group_by <- table_variables$group_by[table_variables$group_by != ""]
do_stats <- table_variables$do_stats[1]
table_variables$group_by <- table_variables$do_stats <- NULL
## ## ## n of diagnosis ## ## ##
db$nDiag <- rowSums(db[,grepl("diagnoses_before_the_first",colnames(db))])
## ## ## n medication ## ## ##
db$nAdhdStim <- ifelse(rowSums(db[,paste0("adhd_medications___",1:4)])==0,0,1)
db$nAdhdNoSt <- ifelse(rowSums(db[,paste0("adhd_medications___",5:6)])==0,0,1)
## ## ## temporal variables ## ## ##
# age of first episode of psychosis
db$afep <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first mental health evaluation
db$afmh <- as.numeric(as.Date(db$dmhvisit, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization first
db$afh <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# age of first hospitalization second
db$afs <- as.numeric(as.Date(db$date_of_first_hospitalizat, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
# time of first mental health complain until first episode
db$timemhfe <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
# prodrome duration
db$prodDur <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$dmhvisit, format="%Y-%m-%d"))/365
#duration of follow-up before first episopde
db$prodfollowup <- as.numeric(as.Date(db$date_of_fep, format="%Y-%m-%d") -
as.Date(db$daterep, format="%Y-%m-%d"))/365
# age at first contact
db$agefirstcontact <- as.numeric(as.Date(db$daterep, format="%Y-%m-%d") -
as.Date(db$dob, format="%Y-%m-%d"))/365
#### #### #### create new joint case_definitions #### #### ####
db$case_definition2 <- ifelse(db$case_definition == 1 | db$case_definition == 3,
13, ifelse(db$case_definition == 2 | db$case_definition == 4,
24, 56))
#### #### #### change categorical to factor #### #### ####
temp <- c(table_variables$item[table_variables$cont == 0],group_by,"case_definition2")
for (i in 1:length(temp)) {
db[,temp[i]] <- as.factor(db[,temp[i]])
}
# # # # # # # # # # # # # # # create final tables # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # "case_definition" # # # # # # # # # # # # # # # # # # # # # # # # ####
descTabA <- f_buildTable(db = db, table_variables, group_by, do_stats, per_type = "f")
# # # # # # # # # # # # # # # Kaplan-Meier# # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# change factor order
db$case_definition2 <- factor(db$case_definition2,levels=c("24","13"))
levels(db$case_definition2) <- c("Schizophrenia","Bipolar")
db$type_of_problem <- factor(db$type_of_problem,levels=c("1","2"))
levels(db$type_of_problem) <- c("Developmental","Non-Developmental")
fit_figS2 <- survfit(Surv(prodDur) ~ problemtype,data=db)
mS2 <- summary(coxph(Surv(prodDur) ~ problemtype,data=db)); mS2
table(db$problemtype)
fit_figS2 <- survfit(Surv(prodDur) ~ as.factor(problemtype),data=db)
mS2 <- summary(coxph(Surv(prodDur) ~ as.factor(problemtype),data=db)); mS2
figS2 <- autoplot(fit_figS2) +
labs(subtitle = "",
x="Time (years)",y="Percent of Converted") +
# scale_colour_manual(name = "Dignosis", values = c("blue","orange"),
#                     labels = c("Non-Depressed", "Depressed")) +
# scale_fill_manual(name = "Dignosis", values = c("blue","orange"),
#                   labels = c("Non-Depressed", "Depressed")) +
scale_y_reverse(labels = seq(100,0,by=-25)) +
scale_x_continuous(breaks = seq(0,30,by=5),limits = c(0,25)) +
theme_classic()
figS2
figS2 <- autoplot(fit_figS2, conf.int = F) +
labs(subtitle = "",
x="Time (years)",y="Percent of Converted") +
# scale_colour_manual(name = "Dignosis", values = c("blue","orange"),
#                     labels = c("Non-Depressed", "Depressed")) +
# scale_fill_manual(name = "Dignosis", values = c("blue","orange"),
#                   labels = c("Non-Depressed", "Depressed")) +
scale_y_reverse(labels = seq(100,0,by=-25)) +
scale_x_continuous(breaks = seq(0,30,by=5),limits = c(0,25)) +
theme_classic()
figS2
($212.20 + $7.80) - $390.00
(212.20 + 7.80) - 390.00
844 +158 +75
