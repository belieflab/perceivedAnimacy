# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
#### # # # # libraries # # # # ####
if (!require(ggplot2)) {install.packages("ggplot2")}; library(ggplot2)
if (!require(ggpubr)) {install.packages("ggpubr")}; library(ggpubr)
#### # # # # import data # # # # ####
# state max loop value
fileNames <- list.files("../modelParametersRecoveryBatch/figures_tables/")
fileNames <- fileNames[grepl("simParsWithParRecovery_",fileNames)]
i=1
temp <- read.csv(paste0("figures_tables/",fileNames[i]))
if (i == 1) {
simParsWithParRecovery <- temp
} else {
simParsWithParRecovery <- rbind(simParsWithParRecovery,temp)
}
for (i in 1:length(fileNames)) {
temp <- read.csv(paste0("figures_tables/",fileNames[i]))
if (i == 1) {
simParsWithParRecovery <- temp
} else {
simParsWithParRecovery <- rbind(simParsWithParRecovery,temp)
}
}; rm(temp)
#### # # # # visualize # # # # ####
fig1A <- ggplot2::ggplot(simParsWithParRecovery, aes(x=mc,y=mc_fit_wm)) +
labs(title = expression(Memory~Capacity~(tau)),
x = expression(Simulated~tau),
y = expression(Recovered~tau)) +
geom_smooth(method="lm",se=F,col="grey") +
geom_point(alpha=0.75) +
coord_fixed(xlim = c(20,100),ylim = c(20,100)) +
theme_classic()
fig1A
temp <- read.csv(paste0("figures_tables/",fileNames[i]))
temp
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
#### # # # # libraries # # # # ####
if (!require(ggplot2)) {install.packages("ggplot2")}; library(ggplot2)
if (!require(ggpubr)) {install.packages("ggpubr")}; library(ggpubr)
#### # # # # import data # # # # ####
# state max loop value
fileNames <- list.files("../modelParametersRecoveryBatch/figures_tables/")
fileNames <- fileNames[grepl("simParsWithParRecovery_",fileNames)]
fileNames
for (i in 1:length(fileNames)) {
temp <- read.csv(paste0("figures_tables/",fileNames[i]))
if (i == 1) {
simParsWithParRecovery <- temp
} else {
simParsWithParRecovery <- rbind(simParsWithParRecovery,temp)
}
}; rm(temp)
#### # # # # visualize # # # # ####
fig1A <- ggplot2::ggplot(simParsWithParRecovery, aes(x=mc,y=mc_fit_wm)) +
labs(title = expression(Memory~Capacity~(tau)),
x = expression(Simulated~tau),
y = expression(Recovered~tau)) +
geom_smooth(method="lm",se=F,col="grey") +
geom_point(alpha=0.75) +
coord_fixed(xlim = c(20,100),ylim = c(20,100)) +
theme_classic()
head)simParsWithParRecovery
head(simParsWithParRecovery)
# # # # # # # # # # global elements # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
i=25
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("../functions.R")
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# # # # # # # # # # global elements # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
i=25
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("../functions.R")
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# get artificial agents simulated with "good" parameters
if (sum(list.files("../figures_tables") == "simPars.csv" |
list.files("../figures_tables") == "simTrials.csv" |
list.files("../figures_tables") == "simRandDist.csv") > 0) {
simPars <- read.csv("../figures_tables/simPars.csv")
simTrials <- read.csv("../figures_tables/simTrials.csv")
randDist <- read.csv("../figures_tables/simRandDist.csv")
} else {
warning("Run script simulate_good_parameters.R")
}
(sum(list.files("../figures_tables") == "simPars.csv" |
list.files("../figures_tables") == "simTrials.csv" |
list.files("../figures_tables") == "simRandDist.csv") > 0)
