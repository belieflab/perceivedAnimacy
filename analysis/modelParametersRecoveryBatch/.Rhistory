fitPars <- list(mcRange = c(20,100),
thetaRange = c(50,200),
etaRange = c(0.55,0.95),
binsSize = data.frame(mc=10,theta=10,eta=30))
"good" artificial subjects to recover their parameters whom which they were
# simulated.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
# setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# get artificial agents simulated with "good" parameters
if (sum(list.files("figures_tables") == "simPars.csv" |
list.files("figures_tables") == "simTrials.csv" |
list.files("figures_tables") == "simRandDist.csv") > 0) {
simPars <- read.csv("figures_tables/simPars.csv")
simTrials <- read.csv("figures_tables/simTrials.csv")
randDist <- read.csv("figures_tables/simRandDist.csv")
} else {
warning("Run script simulate_good_parameters.R")
}
# # # # # # # # # # parameters recovery # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# get all "participants" vector (i.e., set of parameters)
simParticip <- unique(simPars$part)
range(simPars$mc)
range(simPars$theta)
range(simPars$eta)
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# get artificial agents simulated with "good" parameters
if (sum(list.files("figures_tables") == "simPars.csv" |
list.files("figures_tables") == "simTrials.csv" |
list.files("figures_tables") == "simRandDist.csv") > 0) {
simPars <- read.csv("figures_tables/simPars.csv")
simTrials <- read.csv("figures_tables/simTrials.csv")
randDist <- read.csv("figures_tables/simRandDist.csv")
} else {
warning("Run script simulate_good_parameters.R")
}
head(simPars)
# # # # # # # # # # parameters recovery # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# get all "participants" vector (i.e., set of parameters)
simParticip <- unique(simPars$part)
range(simPars$mc)
range(simPars$theta)
range(simPars$eta)
# parameters for fitting algorithm based on mc, theta, and eta ranges
fitPars <- list(mcRange = c(20,100),
thetaRange = c(50,200),
etaRange = c(0.55,0.95),
binsSize = data.frame(mc=30,theta=30,eta=30))
# add columns which will be filled with the fitting algorithm
simPars$negSumLog <- simPars$hitRate <-
simPars$eta_fit_var <- simPars$theta_fit_var <- simPars$mc_fit_var <-
simPars$eta_fit_wm <- simPars$theta_fit_wm <- simPars$mc_fit_wm <- NA
# create list to get posterior densities
posterior_densities <- list()
# get starting time
start_time <- Sys.time()
i=1
message(paste0("participant (",simParticip[i],"): ",i,"/",length(simParticip)))
# get only one participant (i.e., set of parameters)
onePartDat <- simTrials[simTrials$part == simParticip[i],]
View(onePartDat)
head(onePartDat)
# script created by Santiago Castiello. In this script we used the simulated
# "good" artificial subjects to recover their parameters whom which they were
# simulated.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # Behaviour # # # #
# remove irrelevant columns
beh <- beh[!is.na(beh$index),]
# code responses: 1 = chase, 0 = no chase (mirror)
beh$key_press <- ifelse(beh$key_press == "49",1,0)
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0(beh$key_press,"_",beh$test_part)
# NOTE: events must be ordered as follows: hit, FA, Ms, CR
# name IN ORDER the cells
cells <- c("1_chase","1_no_chase","0_chase","0_no_chase")
f_SDTparam(beh,cells)
# fit my model
head(beh)
# code responses: 1 = chase, 0 = no chase (mirror)
beh$chaseR <- ifelse(beh$key_press == "49",1,0)
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0(beh$chaseR,"_",beh$test_part)
beh$test_part
beh$trialType <- ifelse(beh$test_part == "chase","chase","mirror")
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0("R",beh$chaseR,"_TT",beh$trialType)
beh$cells
unique(beh$cells)
table(beh$test_part)
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # Behaviour # # # #
# remove irrelevant columns
beh <- beh[!is.na(beh$index),]
# code responses: 1 = chase, 0 = no chase (mirror)
beh$chaseR <- ifelse(beh$key_press == "49",1,0)
beh$trialType <- ifelse(beh$test_part == "chase","chase","mirror")
# identify which specific video was played at trial t
# beh$trialCond <- beh$stim beh$test_part
# 95_chase
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0("R",beh$chaseR,"_TT",beh$trialType)
unique(beh$cells)
unique(beh$cells)[order(unique(beh$cells))]
# identify which specific video was played at trial t
# beh$trialCond <- beh$stim beh$test_part
# 95_chase
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0("R",beh$chaseR,"_TT",beh$trialType)
# NOTE: events must be ordered as follows: hit, FA, Ms, CR
# name IN ORDER the cells
cells <- c("R1_TTchase","R1_TTmirror","R0_TTchase","R0_TTmirror")
f_SDTparam(beh,cells)
beh$stim
substr(beh$stim,7,nchar(beh$stim)-7)
substr(beh$stim,7,nchar(beh$stim)-6)
beh$stim
substr(beh$stim,6,nchar(beh$stim)-6)
table(substr(beh$stim,6,nchar(beh$stim)-7))
# identify which specific video was played at trial t
beh$trialCond <- paste0(substr(beh$stim,6,nchar(beh$stim)-7),"_",beh$trialType)
table(beh$trialCond)
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # Behaviour # # # #
# remove irrelevant columns
beh <- beh[!is.na(beh$index),]
# code responses: 1 = chase, 0 = no chase (mirror)
beh$chaseR <- ifelse(beh$key_press == "49",1,0)
beh$trialType <- ifelse(beh$test_part == "chase","chase","mirror")
head(beh)
table(beh$trial_type)
table(beh$test_part,beh$trialType)
# script created by Santiago Castiello.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # Behaviour # # # #
# remove irrelevant columns
beh <- beh[!is.na(beh$index),]
# code responses: 1 = chase, 0 = no chase (mirror)
beh$chaseR <- ifelse(beh$key_press == "49",1,0)
beh$trialType <- ifelse(beh$test_part == "chase","chase","mirror")
# identify which specific video was played at trial t
colnames(beh)
grepl("test_part")
colnames(beh)[grepl("test_part"),colnames(beh)]
colnames(beh)[grepl("test_part",colnames(beh))]
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
# # # # Behaviour # # # #
# remove irrelevant columns
beh <- beh[!is.na(beh$index),]
# code responses: 1 = chase, 0 = no chase (mirror)
beh$chaseR <- ifelse(beh$key_press == "49",1,0)
beh$test_part <- ifelse(beh$test_part == "chase","chase","mirror")
colnames(beh)[grepl("test_part",colnames(beh))] <- "trialType"
beh$trialCond <- paste0(substr(beh$stim,6,nchar(beh$stim)-7),"_",beh$trialType)
# get the cells for the SDT contingency table (pressed key and trial type)
beh$cells <- paste0("R",beh$chaseR,"_TT",beh$trialType)
# NOTE: events must be ordered as follows: hit, FA, Ms, CR
# name IN ORDER the cells
cells <- c("R1_TTchase","R1_TTmirror","R0_TTchase","R0_TTmirror")
f_SDTparam(beh,cells)
f_SDTparam(beh,cells)
head(quest)
colnames(quest)
grepl("rgpts_ref",colnames(quest))
colnames(quest)[grepl("rgpts_ref",colnames(quest))]
quest[,grepl("rgpts_ref",colnames(quest))]
quest[,grepl("rgpts_ref",colnames(quest))]
sum(quest[,grepl("rgpts_per",colnames(quest))])
head(quest)
# script created by Santiago Castiello.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
sum(quest[,grepl("rgpts_ref",colnames(quest))])
quest[,grepl("rgpts_ref",colnames(quest))]
quest[,grepl("rgpts_per",colnames(quest))]
colSums(quest[,grepl("rgpts_ref",colnames(quest))])
str(quest)
grepl("rgpts",colnames(quest))
sum(grepl("rgpts",colnames(quest)))
# script created by Santiago Castiello.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
colnames(quest)[grepl("rgpts",colnames(quest))]
columnsToInteger <- colnames(quest)[grepl("rgpts",colnames(quest))]
columnsToInteger <- colnames(quest)[grepl("rgpts",colnames(quest))]
for (i in 1:length(columnsToInteger)) {
quest[,columnsToInteger[i]] <- as.integer(quest[,columnsToInteger[i]])
}
quest[,columnsToInteger[i]]
columnsToInteger
quest[,columnsToInteger[i]]
# script created by Santiago Castiello.
# 17/05/2022. Special thanks to Josh Kenney.
# Remove all of the elements currently loaded in R
rm(list=ls(all=TRUE))
# add work directory
setwd(file.path(dirname(rstudioapi::getActiveDocumentContext()$path)))
# # # # # # # # # # libraries # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # functions # # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
source("functions.R")
# # # # # # # # # # import data # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Chasing Detection Task - get data files names
behDataFilesNames <- list.files("../../data/behaviour")
# read files
beh <- read.csv("../../data/behaviour/animacy_A2FGKKWP33DFWS.csv")
# workerId vector
workerId <- unique(beh$workerId)[unique(beh$workerId) != ""]
# Chasing Detection Task - get data files names
questDataFilesNames <- list.files("../../data/questionnaires")
# read files
quest <- read.csv("../../data/questionnaires/perceivedAnimacy_May 17, 2022_12.30.csv")
# # # # # # # # # # clean data# # # # # # # # # # # # # # # # # # # # # # # ####
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# # # # Questionnaires # # # #
# remove questionnaires with no workerId
quest$keep <- F
for (i in 1:length(workerId)) {
if (sum(quest$workerId == workerId[i]) > 0) {
quest$keep[quest$workerId == workerId[i]] <- T
}
}
quest <- quest[quest$keep == T,]
columnsToInteger <- colnames(quest)[grepl("rgpts",colnames(quest))]
quest[,grepl("rgpts",colnames(quest))]
colnames(quest)[grepl("rgpts",colnames(quest))]
columnsToInteger <- colnames(quest)[grepl("rgpts",colnames(quest))][1:18]
for (i in 1:length(columnsToInteger)) {
quest[,columnsToInteger[i]] <- as.integer(quest[,columnsToInteger[i]])
}
colSums(quest[,grepl("rgpts_ref",colnames(quest))])
rowSums(quest[,grepl("rgpts_ref",colnames(quest))])
rowSums(quest[,grepl("rgpts_per",colnames(quest))])
quest$rgpts_ref <- rowSums(quest[,grepl("rgpts_ref",colnames(quest))])
quest$rgpts_per <- rowSums(quest[,grepl("rgpts_per",colnames(quest))])
head(quest)
